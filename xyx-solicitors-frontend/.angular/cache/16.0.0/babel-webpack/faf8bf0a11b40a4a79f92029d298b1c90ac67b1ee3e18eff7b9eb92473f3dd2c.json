{"ast":null,"code":"import { HttpResponse } from '@angular/common/http';\nimport { of, throwError } from 'rxjs';\nimport { delay, materialize, dematerialize } from 'rxjs/operators';\n// array in local storage for registered users\nconst usersKey = 'angular-tutorial-users';\nlet users = JSON.parse(localStorage.getItem(usersKey)) || [];\nexport function fakeBackendInterceptor(request, next) {\n  const {\n    url,\n    method,\n    headers,\n    body\n  } = request;\n  return handleRoute();\n  function handleRoute() {\n    switch (true) {\n      case url.endsWith('/users/authenticate') && method === 'POST':\n        return authenticate();\n      case url.endsWith('/users/register') && method === 'POST':\n        return register();\n      case url.endsWith('/users') && method === 'GET':\n        return getUsers();\n      case url.match(/\\/users\\/\\d+$/) && method === 'GET':\n        return getUserById();\n      case url.match(/\\/users\\/\\d+$/) && method === 'PUT':\n        return updateUser();\n      case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\n        return deleteUser();\n      default:\n        // pass through any requests not handled above\n        return next(request);\n    }\n  }\n  // route functions\n  function authenticate() {\n    const {\n      username,\n      password\n    } = body;\n    const user = users.find(x => x.username === username && x.password === password);\n    if (!user) return error('Username or password is incorrect');\n    return ok({\n      ...basicDetails(user),\n      token: 'fake-jwt-token'\n    });\n  }\n  function register() {\n    const user = body;\n    if (users.find(x => x.username === user.username)) {\n      return error('Username \"' + user.username + '\" is already taken');\n    }\n    user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\n    users.push(user);\n    localStorage.setItem(usersKey, JSON.stringify(users));\n    return ok();\n  }\n  function getUsers() {\n    if (!isLoggedIn()) return unauthorized();\n    return ok(users.map(x => basicDetails(x)));\n  }\n  function getUserById() {\n    if (!isLoggedIn()) return unauthorized();\n    const user = users.find(x => x.id === idFromUrl());\n    return ok(basicDetails(user));\n  }\n  function updateUser() {\n    if (!isLoggedIn()) return unauthorized();\n    let params = body;\n    let user = users.find(x => x.id === idFromUrl());\n    // only update password if entered\n    if (!params.password) {\n      delete params.password;\n    }\n    // update and save user\n    Object.assign(user, params);\n    localStorage.setItem(usersKey, JSON.stringify(users));\n    return ok();\n  }\n  function deleteUser() {\n    if (!isLoggedIn()) return unauthorized();\n    users = users.filter(x => x.id !== idFromUrl());\n    localStorage.setItem(usersKey, JSON.stringify(users));\n    return ok();\n  }\n  // helper functions\n  function ok(body) {\n    return of(new HttpResponse({\n      status: 200,\n      body\n    })).pipe(delay(500)); // delay observable to simulate server api call\n  }\n\n  function error(message) {\n    return throwError(() => ({\n      error: {\n        message\n      }\n    })).pipe(materialize(), delay(500), dematerialize()); // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648);\n  }\n\n  function unauthorized() {\n    return throwError(() => ({\n      status: 401,\n      error: {\n        message: 'Unauthorized'\n      }\n    })).pipe(materialize(), delay(500), dematerialize());\n  }\n  function basicDetails(user) {\n    const {\n      id,\n      username,\n      firstName,\n      lastName\n    } = user;\n    return {\n      id,\n      username,\n      firstName,\n      lastName\n    };\n  }\n  function isLoggedIn() {\n    return headers.get('Authorization') === 'Bearer fake-jwt-token';\n  }\n  function idFromUrl() {\n    const urlParts = url.split('/');\n    return parseInt(urlParts[urlParts.length - 1]);\n  }\n}","map":{"version":3,"names":["HttpResponse","of","throwError","delay","materialize","dematerialize","usersKey","users","JSON","parse","localStorage","getItem","fakeBackendInterceptor","request","next","url","method","headers","body","handleRoute","endsWith","authenticate","register","getUsers","match","getUserById","updateUser","deleteUser","username","password","user","find","x","error","ok","basicDetails","token","id","length","Math","max","map","push","setItem","stringify","isLoggedIn","unauthorized","idFromUrl","params","Object","assign","filter","status","pipe","message","firstName","lastName","get","urlParts","split","parseInt"],"sources":["/home/devkhalifa/Documents/GitHub/xyx-solicitors-frontend/src/app/_helpers/fake-backend.ts"],"sourcesContent":["import { HttpRequest, HttpResponse, HttpHandlerFn } from '@angular/common/http';\nimport { of, throwError } from 'rxjs';\nimport { delay, materialize, dematerialize } from 'rxjs/operators';\n\n// array in local storage for registered users\nconst usersKey = 'angular-tutorial-users';\nlet users: any[] = JSON.parse(localStorage.getItem(usersKey)!) || [];\n\nexport function fakeBackendInterceptor(request: HttpRequest<any>, next: HttpHandlerFn) {\n    const { url, method, headers, body } = request;\n\n    return handleRoute();\n\n    function handleRoute() {\n        switch (true) {\n            case url.endsWith('/users/authenticate') && method === 'POST':\n                return authenticate();\n            case url.endsWith('/users/register') && method === 'POST':\n                return register();\n            case url.endsWith('/users') && method === 'GET':\n                return getUsers();\n            case url.match(/\\/users\\/\\d+$/) && method === 'GET':\n                return getUserById();\n            case url.match(/\\/users\\/\\d+$/) && method === 'PUT':\n                return updateUser();\n            case url.match(/\\/users\\/\\d+$/) && method === 'DELETE':\n                return deleteUser();\n            default:\n                // pass through any requests not handled above\n                return next(request);\n        }\n    }\n\n    // route functions\n\n    function authenticate() {\n        const { username, password } = body;\n        const user = users.find(x => x.username === username && x.password === password);\n        if (!user) return error('Username or password is incorrect');\n        return ok({\n            ...basicDetails(user),\n            token: 'fake-jwt-token'\n        })\n    }\n\n    function register() {\n        const user = body\n\n        if (users.find(x => x.username === user.username)) {\n            return error('Username \"' + user.username + '\" is already taken')\n        }\n\n        user.id = users.length ? Math.max(...users.map(x => x.id)) + 1 : 1;\n        users.push(user);\n        localStorage.setItem(usersKey, JSON.stringify(users));\n        return ok();\n    }\n\n    function getUsers() {\n        if (!isLoggedIn()) return unauthorized();\n        return ok(users.map(x => basicDetails(x)));\n    }\n\n    function getUserById() {\n        if (!isLoggedIn()) return unauthorized();\n\n        const user = users.find(x => x.id === idFromUrl());\n        return ok(basicDetails(user));\n    }\n\n    function updateUser() {\n        if (!isLoggedIn()) return unauthorized();\n\n        let params = body;\n        let user = users.find(x => x.id === idFromUrl());\n\n        // only update password if entered\n        if (!params.password) {\n            delete params.password;\n        }\n\n        // update and save user\n        Object.assign(user, params);\n        localStorage.setItem(usersKey, JSON.stringify(users));\n\n        return ok();\n    }\n\n    function deleteUser() {\n        if (!isLoggedIn()) return unauthorized();\n\n        users = users.filter(x => x.id !== idFromUrl());\n        localStorage.setItem(usersKey, JSON.stringify(users));\n        return ok();\n    }\n\n    // helper functions\n\n    function ok(body?: any) {\n        return of(new HttpResponse({ status: 200, body }))\n            .pipe(delay(500)); // delay observable to simulate server api call\n    }\n\n    function error(message: string) {\n        return throwError(() => ({ error: { message } }))\n            .pipe(materialize(), delay(500), dematerialize()); // call materialize and dematerialize to ensure delay even if an error is thrown (https://github.com/Reactive-Extensions/RxJS/issues/648);\n    }\n\n    function unauthorized() {\n        return throwError(() => ({ status: 401, error: { message: 'Unauthorized' } }))\n            .pipe(materialize(), delay(500), dematerialize());\n    }\n\n    function basicDetails(user: any) {\n        const { id, username, firstName, lastName } = user;\n        return { id, username, firstName, lastName };\n    }\n\n    function isLoggedIn() {\n        return headers.get('Authorization') === 'Bearer fake-jwt-token';\n    }\n\n    function idFromUrl() {\n        const urlParts = url.split('/');\n        return parseInt(urlParts[urlParts.length - 1]);\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}