{"ast":null,"code":"import { NavigationStart } from '@angular/router';\nimport { Subject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nclass AlertService {\n  constructor(router) {\n    this.router = router;\n    this.subject = new Subject();\n    this.showAfterRedirect = false;\n    // clear alert messages on route change unless 'showAfterRedirect' flag is true\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationStart) {\n        if (this.showAfterRedirect) {\n          // only keep for a single route change\n          this.showAfterRedirect = false;\n        } else {\n          // clear alert message\n          this.clear();\n        }\n      }\n    });\n  }\n  onAlert() {\n    return this.subject.asObservable();\n  }\n  success(message, showAfterRedirect = false) {\n    this.showAfterRedirect = showAfterRedirect;\n    this.subject.next({\n      type: 'success',\n      message\n    });\n  }\n  error(message, showAfterRedirect = false) {\n    this.showAfterRedirect = showAfterRedirect;\n    this.subject.next({\n      type: 'error',\n      message\n    });\n  }\n  clear() {\n    // clear by calling subject.next() with null\n    this.subject.next(null);\n  }\n}\nAlertService.ɵfac = function AlertService_Factory(t) {\n  return new (t || AlertService)(i0.ɵɵinject(i1.Router));\n};\nAlertService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AlertService,\n  factory: AlertService.ɵfac,\n  providedIn: 'root'\n});\nexport { AlertService };","map":{"version":3,"names":["NavigationStart","Subject","AlertService","constructor","router","subject","showAfterRedirect","events","subscribe","event","clear","onAlert","asObservable","success","message","next","type","error","i0","ɵɵinject","i1","Router","factory","ɵfac","providedIn"],"sources":["/home/devkhalifa/Documents/GitHub/xyx-solicitors-frontend/src/app/_services/alert.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({ providedIn: 'root' })\nexport class AlertService {\n    private subject = new Subject<any>();\n    private showAfterRedirect = false;\n\n    constructor(private router: Router) {\n        // clear alert messages on route change unless 'showAfterRedirect' flag is true\n        this.router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                if (this.showAfterRedirect) {\n                    // only keep for a single route change\n                    this.showAfterRedirect = false;\n                } else {\n                    // clear alert message\n                    this.clear();\n                }\n            }\n        });\n    }\n\n    onAlert(): Observable<any> {\n        return this.subject.asObservable();\n    }\n\n    success(message: string, showAfterRedirect = false) {\n        this.showAfterRedirect = showAfterRedirect;\n        this.subject.next({ type: 'success', message });\n    }\n\n    error(message: string, showAfterRedirect = false) {\n        this.showAfterRedirect = showAfterRedirect;\n        this.subject.next({ type: 'error', message });\n    }\n\n    clear() {\n        // clear by calling subject.next() with null\n        this.subject.next(null);\n    }\n}"],"mappings":"AACA,SAAiBA,eAAe,QAAQ,iBAAiB;AACzD,SAAqBC,OAAO,QAAQ,MAAM;;;AAE1C,MACaC,YAAY;EAIrBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAHlB,KAAAC,OAAO,GAAG,IAAIJ,OAAO,EAAO;IAC5B,KAAAK,iBAAiB,GAAG,KAAK;IAG7B;IACA,IAAI,CAACF,MAAM,CAACG,MAAM,CAACC,SAAS,CAACC,KAAK,IAAG;MACjC,IAAIA,KAAK,YAAYT,eAAe,EAAE;QAClC,IAAI,IAAI,CAACM,iBAAiB,EAAE;UACxB;UACA,IAAI,CAACA,iBAAiB,GAAG,KAAK;SACjC,MAAM;UACH;UACA,IAAI,CAACI,KAAK,EAAE;;;IAGxB,CAAC,CAAC;EACN;EAEAC,OAAOA,CAAA;IACH,OAAO,IAAI,CAACN,OAAO,CAACO,YAAY,EAAE;EACtC;EAEAC,OAAOA,CAACC,OAAe,EAAER,iBAAiB,GAAG,KAAK;IAC9C,IAAI,CAACA,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACD,OAAO,CAACU,IAAI,CAAC;MAAEC,IAAI,EAAE,SAAS;MAAEF;IAAO,CAAE,CAAC;EACnD;EAEAG,KAAKA,CAACH,OAAe,EAAER,iBAAiB,GAAG,KAAK;IAC5C,IAAI,CAACA,iBAAiB,GAAGA,iBAAiB;IAC1C,IAAI,CAACD,OAAO,CAACU,IAAI,CAAC;MAAEC,IAAI,EAAE,OAAO;MAAEF;IAAO,CAAE,CAAC;EACjD;EAEAJ,KAAKA,CAAA;IACD;IACA,IAAI,CAACL,OAAO,CAACU,IAAI,CAAC,IAAI,CAAC;EAC3B;;AApCSb,YAAY,C;mBAAZA,YAAY,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;AAAA;AAAZnB,YAAY,C;SAAZA,YAAY;EAAAoB,OAAA,EAAZpB,YAAY,CAAAqB,IAAA;EAAAC,UAAA,EADC;AAAM;SACnBtB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}