{"ast":null,"code":"import { bootstrapApplication } from '@angular/platform-browser';\nimport { provideRouter } from '@angular/router';\nimport { provideHttpClient, withInterceptors } from '@angular/common/http';\n// fake backend\nimport { fakeBackendInterceptor } from '@app/_helpers';\nimport { AppComponent } from '@app/app.component';\nimport { jwtInterceptor, errorInterceptor } from '@app/_helpers';\nimport { APP_ROUTES } from '@app/app.routes';\nbootstrapApplication(AppComponent, {\n  providers: [provideRouter(APP_ROUTES), provideHttpClient(withInterceptors([jwtInterceptor, errorInterceptor,\n  // fake backend\n  fakeBackendInterceptor]))]\n});","map":{"version":3,"names":["bootstrapApplication","provideRouter","provideHttpClient","withInterceptors","fakeBackendInterceptor","AppComponent","jwtInterceptor","errorInterceptor","APP_ROUTES","providers"],"sources":["/home/devkhalifa/Documents/GitHub/xyx-solicitors-frontend/src/main.ts"],"sourcesContent":["import { bootstrapApplication } from '@angular/platform-browser';\nimport { provideRouter } from '@angular/router';\nimport { provideHttpClient, withInterceptors } from '@angular/common/http';\n\n// fake backend\nimport { fakeBackendInterceptor } from '@app/_helpers';\n\nimport { AppComponent } from '@app/app.component';\nimport { jwtInterceptor, errorInterceptor } from '@app/_helpers';\nimport { APP_ROUTES } from '@app/app.routes';\n\nbootstrapApplication(AppComponent, {\n    providers: [\n        provideRouter(APP_ROUTES),\n        provideHttpClient(\n            withInterceptors([\n                jwtInterceptor, \n                errorInterceptor,\n\n                // fake backend\n                fakeBackendInterceptor\n            ])\n        )\n    ]\n});\n"],"mappings":"AAAA,SAASA,oBAAoB,QAAQ,2BAA2B;AAChE,SAASC,aAAa,QAAQ,iBAAiB;AAC/C,SAASC,iBAAiB,EAAEC,gBAAgB,QAAQ,sBAAsB;AAE1E;AACA,SAASC,sBAAsB,QAAQ,eAAe;AAEtD,SAASC,YAAY,QAAQ,oBAAoB;AACjD,SAASC,cAAc,EAAEC,gBAAgB,QAAQ,eAAe;AAChE,SAASC,UAAU,QAAQ,iBAAiB;AAE5CR,oBAAoB,CAACK,YAAY,EAAE;EAC/BI,SAAS,EAAE,CACPR,aAAa,CAACO,UAAU,CAAC,EACzBN,iBAAiB,CACbC,gBAAgB,CAAC,CACbG,cAAc,EACdC,gBAAgB;EAEhB;EACAH,sBAAsB,CACzB,CAAC,CACL;CAER,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}