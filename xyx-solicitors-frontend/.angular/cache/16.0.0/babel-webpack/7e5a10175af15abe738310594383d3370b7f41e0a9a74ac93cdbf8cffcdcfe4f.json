{"ast":null,"code":"import { inject } from '@angular/core';\nimport { environment } from '@environments/environment';\nimport { AccountService } from '@app/_services';\nexport function jwtInterceptor(request, next) {\n  // add auth header with jwt if user is logged in and request is to the api url\n  const accountService = inject(AccountService);\n  const user = accountService.userValue;\n  const isLoggedIn = user?.token;\n  const isApiUrl = request.url.startsWith(environment.apiUrl);\n  if (isLoggedIn && isApiUrl) {\n    request = request.clone({\n      setHeaders: {\n        Authorization: `Bearer ${user.token}`\n      }\n    });\n  }\n  return next(request);\n}","map":{"version":3,"names":["inject","environment","AccountService","jwtInterceptor","request","next","accountService","user","userValue","isLoggedIn","token","isApiUrl","url","startsWith","apiUrl","clone","setHeaders","Authorization"],"sources":["/home/devkhalifa/Documents/GitHub/xyx-solicitors-frontend/src/app/_helpers/jwt.interceptor.ts"],"sourcesContent":["import { inject } from '@angular/core';\nimport { HttpRequest, HttpHandlerFn } from '@angular/common/http';\n\nimport { environment } from '@environments/environment';\nimport { AccountService } from '@app/_services';\n\nexport function jwtInterceptor(request: HttpRequest<any>, next: HttpHandlerFn) {\n    // add auth header with jwt if user is logged in and request is to the api url\n    const accountService = inject(AccountService);\n    const user = accountService.userValue;\n    const isLoggedIn = user?.token;\n    const isApiUrl = request.url.startsWith(environment.apiUrl);\n    if (isLoggedIn && isApiUrl) {\n        request = request.clone({\n            setHeaders: { Authorization: `Bearer ${user.token}` }\n        });\n    }\n\n    return next(request);\n}"],"mappings":"AAAA,SAASA,MAAM,QAAQ,eAAe;AAGtC,SAASC,WAAW,QAAQ,2BAA2B;AACvD,SAASC,cAAc,QAAQ,gBAAgB;AAE/C,OAAM,SAAUC,cAAcA,CAACC,OAAyB,EAAEC,IAAmB;EACzE;EACA,MAAMC,cAAc,GAAGN,MAAM,CAACE,cAAc,CAAC;EAC7C,MAAMK,IAAI,GAAGD,cAAc,CAACE,SAAS;EACrC,MAAMC,UAAU,GAAGF,IAAI,EAAEG,KAAK;EAC9B,MAAMC,QAAQ,GAAGP,OAAO,CAACQ,GAAG,CAACC,UAAU,CAACZ,WAAW,CAACa,MAAM,CAAC;EAC3D,IAAIL,UAAU,IAAIE,QAAQ,EAAE;IACxBP,OAAO,GAAGA,OAAO,CAACW,KAAK,CAAC;MACpBC,UAAU,EAAE;QAAEC,aAAa,EAAE,UAAUV,IAAI,CAACG,KAAK;MAAE;KACtD,CAAC;;EAGN,OAAOL,IAAI,CAACD,OAAO,CAAC;AACxB"},"metadata":{},"sourceType":"module","externalDependencies":[]}